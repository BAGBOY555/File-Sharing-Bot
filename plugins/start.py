#(┬й)Codexbotz

import asyncio
from pyrogram import Client, filters, __version__
from pyrogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton
from pyrogram.errors import FloodWait

from bot import Bot
from config import ADMINS, START_MSG, OWNER_ID, CUSTOM_CAPTION, DISABLE_CHANNEL_BUTTON
from helper_func import subscribed, encode, decode, get_messages

@Bot.on_message(filters.command('start') & filters.private & subscribed)
async def start_command(client: Client, message: Message):
    text = message.text
    if len(text)>7:
        try:
            base64_string = text.split(" ", 1)[1]
        except:
            return
        string = await decode(base64_string)
        argument = string.split("-")
        if len(argument) == 3:
            try:
                start = int(int(argument[1]) / abs(client.db_channel.id))
                end = int(int(argument[2]) / abs(client.db_channel.id))
            except:
                return
            if start <= end:
                ids = range(start,end+1)
            else:
                ids = []
                i = start
                while True:
                    ids.append(i)
                    i -= 1
                    if i < end:
                        break
        elif len(argument) == 2:
            try:
                ids = [int(int(argument[1]) / abs(client.db_channel.id))]
            except:
                return
        temp_msg = await message.reply("Please wait...")
        try:
            messages = await get_messages(client, ids)
        except:
            await message.reply_text("Something went wrong..!")
            return
        await temp_msg.delete()

        for msg in messages:

            if bool(CUSTOM_CAPTION) & bool(msg.document):
                caption = CUSTOM_CAPTION.format(previouscaption = "" if not msg.caption else msg.caption.html, filename = msg.document.file_name)
            else:
                caption = "" if not msg.caption else msg.caption.html

            if DISABLE_CHANNEL_BUTTON:
                reply_markup = msg.reply_markup
            else:
                reply_markup = None

            try:
                await msg.copy(chat_id=message.from_user.id, caption = caption, parse_mode = 'html', reply_markup = reply_markup)
                await asyncio.sleep(0.5)
            except FloodWait as e:
                await asyncio.sleep(e.x)
                await msg.copy(chat_id=message.from_user.id, caption = caption, parse_mode = 'html', reply_markup = reply_markup)
            except:
                pass
        return
    else:
        reply_markup = InlineKeyboardMarkup(
            [
                [
                    InlineKeyboardButton("ЁЯШК About Me", callback_data = "about"),
                    InlineKeyboardButton("ЁЯФТ Close", callback_data = "close")
                ]
            ]
        )
        await message.reply_text(
            text = START_MSG.format(
                first = message.from_user.first_name,
                last = message.from_user.last_name,
                username = None if not message.from_user.username else '@' + message.from_user.username,
                mention = message.from_user.mention,
                id = message.from_user.id
            ),
            reply_markup = reply_markup,
            disable_web_page_preview = True,
            quote = True
        )
        return

@Bot.on_message(filters.command('start') & filters.private)
async def not_joined(client: Client, message: Message):
    text = "<b>р┤Юр┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж Data Base р┤кр╡Нр┤░р┤Хр┤╛р┤░р┤В р┤ир┤┐р┤Щр╡Нр┤Щр╡╛ р┤Зр┤др╡Бр┤╡р┤░р╡Ж р┤Юр┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж Update Channel р┤▓р┤┐р╡╜ join р┤Ър╡Жр┤пр╡Нр┤др┤┐р┤Яр╡Нр┤Яр┤┐р┤▓р╡Нр┤▓\n\nр┤Ер┤др╡Бр┤Хр╡Кр┤гр╡Нр┤Яр╡Н р┤др┤╛р┤┤р╡Ж р┤Хр┤╛р┤гр╡Бр┤ир╡Нр┤и (join Channel) р┤Ор┤ир╡Нр┤и link р┤Йр┤кр┤пр╡Лр┤Чр┤┐р┤Ър╡Нр┤Ър╡Б update channel р┤▓р┤┐р╡╜ р┤Ер┤Вр┤Чр┤ор┤╛р┤Хр╡В\n\nYou have not yet joined our Update Channel as per our Data Base\n\nso join the update channel using the link (join Channel) below\n\nроОроЩрпНроХро│рпН родро░ро╡рпБродрпНродро│родрпНродро┐ройрпНрокроЯро┐ роирпАроЩрпНроХро│рпН роЗройрпНройрпБроорпН роОроЩрпНроХро│рпН рокрпБродрпБрокрпНрокро┐рокрпНрокрпБ роЪрпЗройро▓ро┐ро▓рпН роЪрпЗро░ро╡ро┐ро▓рпНро▓рпИ, роОройро╡рпЗ роХрпАро┤рпЗропрпБро│рпНро│ роЗрогрпИрокрпНрокрпИрокрпН рокропройрпНрокроЯрпБродрпНродро┐ роЪрпЗройро▓ро┐ро▓рпН роЪрпЗро░рпБроЩрпНроХро│рпН (роЪрпЗройро▓ро┐ро▓рпН роЪрпЗро░рпБроЩрпНроХро│рпН)\n\nр▓ир▓ор│Нр▓о р▓бр│Зр▓Яр▓╛ р▓мр│Зр▓╕р│Н р▓кр│Нр▓░р▓Хр▓╛р▓░ р▓ир│Ар▓╡р│Б р▓Зр▓ир│Нр▓ир│В р▓ир▓ор│Нр▓о р▓Ер▓кр│Нр▓бр│Зр▓Яр│Н р▓Ър▓╛р▓ир│Жр▓▓р│Н р▓Чр│Ж р▓╕р│Зр▓░р▓┐р▓Хр│Кр▓Вр▓бр▓┐р▓▓р│Нр▓▓ р▓╣р▓╛р▓Чр▓╛р▓Чр▓┐ р▓Хр│Жр▓│р▓Чр▓┐р▓и р▓▓р▓┐р▓Вр▓Хр│Н р▓мр▓│р▓╕р▓┐ (р▓Ър▓╛р▓ир│Жр▓▓р│Н р▓╕р│Зр▓░р▓┐р▓Хр│Кр▓│р│Нр▓│р▓┐) р▓Ер▓кр│Нр▓бр│Зр▓Яр│Н р▓Ър▓╛р▓ир│Жр▓▓р│Н р▓Чр│Ж р▓╕р│Зр▓░р▓┐р▓Хр│Кр▓│р│Нр▓│р▓┐\n\nр░ор░╛ р░бр▒Зр░Яр░╛ р░мр▒Зр░╕р▒Н р░кр▒Нр░░р░Хр░╛р░░р░В р░ор▒Ар░░р▒Б р░Зр░Вр░Хр░╛ р░ор░╛ р░Ер░кр▒НтАМр░бр▒Зр░Яр▒Н р░Ыр░╛р░ир▒Жр░▓р▒НтАМр░▓р▒Л р░Ър▒Зр░░р░▓р▒Зр░жр▒Б р░Хр░╛р░мр░Яр▒Нр░Яр░┐ р░жр░┐р░Чр▒Бр░╡ р░▓р░┐р░Вр░Хр▒Н (р░Ыр░╛р░ир▒Жр░▓р▒НтАМр░▓р▒Л р░Ър▒Зр░░р░Вр░бр░┐) р░Йр░кр░пр▒Лр░Чр░┐р░Вр░Ър░┐ р░Ер░кр▒НтАМр░бр▒Зр░Яр▒Н р░Ыр░╛р░ир▒Жр░▓р▒НтАМр░▓р▒Л р░Ър▒Зр░░р░Вр░бр░┐\n\nрдЖрдк рдЕрднреА рддрдХ рд╣рдорд╛рд░реЗ рдбреЗрдЯрд╛ рдмреЗрд╕ рдХреЗ рдЕрдиреБрд╕рд╛рд░ рд╣рдорд╛рд░реЗ рдЕрдкрдбреЗрдЯ рдЪреИрдирд▓ рдореЗрдВ рд╢рд╛рдорд┐рд▓ рдирд╣реАрдВ рд╣реБрдП рд╣реИрдВ, рдЗрд╕рд▓рд┐рдП рдиреАрдЪреЗ рджрд┐рдП рдЧрдП рд▓рд┐рдВрдХ (рдЪреИрдирд▓ рд╕реЗ рдЬреБрдбрд╝реЗрдВ) рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░рдХреЗ рдЕрдкрдбреЗрдЯ рдЪреИрдирд▓ рд╕реЗ рдЬреБрдбрд╝реЗрдВ </b>"
    message_text = message.text
    try:
        command, argument = message_text.split()
        text = text + f" <b>after join channel ЁЯСЙЁЯСЙ<a href='https://t.me/{client.username}?start={argument}'>click Here</a></b>"
    except ValueError:
        pass
    reply_markup = InlineKeyboardMarkup([[InlineKeyboardButton("Join Channel", url = client.invitelink)]])
    await message.reply(
        text = text,
        reply_markup = reply_markup,
        quote = True,
        disable_web_page_preview = True
    )
